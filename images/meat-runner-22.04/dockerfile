FROM ghcr.io/actions/actions-runner:2.323.0
LABEL org.opencontainers.image.source=https://github.com/synapsestudios/meat-runner

SHELL ["/bin/bash", "--login", "-c"]
WORKDIR /home/runner
USER root
# apt-fast prerequisites
RUN apt-get update && apt-get install -y software-properties-common; rm -rf /var/lib/apt/lists/*
# Install apt-fast
RUN add-apt-repository ppa:apt-fast/stable
RUN apt-get update && apt-get install -y apt-fast
RUN echo "alias apt-get='apt-fast --no-install-recommends'" >> /root/.bashrc
RUN source /root/.bashrc

RUN apt-get install -y curl
RUN apt-get install -y unzip
RUN apt-get install -y zip
RUN apt-get install -y jq
RUN apt-get install -y openjdk-17-jdk
RUN apt-get install -y gradle
RUN apt-get install -y npm
RUN apt-get install -y wget
RUN apt-get install -y pipx

# Add pipx to PATH
RUN pipx ensurepath

# Install Docker Compose
RUN install -m 0755 -d /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
RUN chmod a+r /etc/apt/keyrings/docker.asc
RUN set -o pipefail && echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update && apt-get install -y docker-compose-plugin

# Install Helm v3
ARG HELM_VERSION=3.14.0
RUN set -o pipefail && curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
RUN set -o pipefail && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
RUN apt-get update && apt-get install -y helm=${HELM_VERSION}-1

ARG NVM_VERSION=0.39.7
ARG NODE_VERSIONS="18 20 21"
# Switch back to runner user to install nvm
USER runner
SHELL ["/bin/bash", "--login", "-i", "-o", "pipefail", "-c"]
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v${NVM_VERSION}/install.sh | bash
RUN source $HOME/.bashrc
# Install Node LTS
RUN nvm install --lts
RUN for version in $NODE_VERSIONS; do nvm install $version; done
RUN nvm use --lts
# Install global NPM packages
RUN npm install -g yarn
SHELL ["/bin/bash", "--login", "-c"]
CMD ["/home/runner/run.sh"]